#calc total carbon per sample and species sizegroup
Macro_biomass<-Macro_biomass%>%
dplyr::group_by(SampleDate,Station,Gear,Taxlifestage,SizeGroup)%>%
dplyr::summarise(Total_sample_dw=sum(Total_dw))
Macro_biomass$carbon<-Macro_biomass$Total_sample_dw*0.4 #I don't know where the 0.4 carbon conversion rate comes from
#bring in volume and calculate BPUE
volumes<-read_excel("Data/Mysid_Qry1 Volume.xlsx")
Macro_biomass$SampleDate<-as.Date(Macro_biomass$SampleDate,"%m/%d/%Y")
Macro_biomass<-Macro_biomass%>%inner_join(volumes)
Macro_biomass$BPUE<-Macro_biomass$carbon/Macro_biomass$Volume
Macro_biomass$BPUE<-Macro_biomass$BPUE*1e6 #change grams to micrograms to fit with meso units
#filter to be 1975 and after
Macro_biomass<-Macro_biomass%>%
filter(SampleDate>"1974-12-31")
#join in station info
Stations<-read_excel("Data/StationLookUp.xlsx")
Zoop_macro<-Macro_biomass%>%left_join(Stations)
Zoop_macro$Station<-Zoop_macro$StationNZ
Zoop_macro$Longitude<--(Zoop_macro$longdec)
Zoop_macro$Latitude<-Zoop_macro$latdec
#join meso and macro together
Zoop_meso<-dplyr::select(Zoop_meso,Date,Station,Source,SizeClass,Taxlifestage,BPUE,Latitude,Longitude)
Zoop_macro$Date<-Zoop_macro$SampleDate
Zoop_macro$Source<-"EMP"
Zoop_macro$SizeClass<-"Macro"
Zoop_macro<-ungroup(Zoop_macro)
Zoop_macro<-(dplyr::select(Zoop_macro,Date,Station,Source,SizeClass,Taxlifestage,BPUE,Latitude,Longitude))
Zoop_BPUE<-Zoop_meso%>%rbind(Zoop_macro)
#Lets bring in the FMWT Mysid BPUE data, which will be used for the short-term metrics
FMWT_Macro <- read_excel("Data/FMWT_MysidBPUE_2007to2018_25Sept2020.xlsx",
sheet = "FMWT Mysid BPUE Matrix")
FMWT_Stations<-read_excel("Data/FMWT_MysidBPUE_2007to2018_25Sept2020.xlsx",
sheet = "Station Lookup")
FMWT_Stations$Latitude<-FMWT_Stations$LatDecDegrees
FMWT_Stations$Longitude<-FMWT_Stations$LongDecDegrees
FMWT_Stations<-dplyr::select(FMWT_Stations,Station,Longitude,Latitude)
FMWT_Stations$Source<-"FMWT"
FMWT_Macro<-FMWT_Macro%>%inner_join(dplyr::select(FMWT_Stations,Station,Longitude,Latitude))
#pivot longer
FMWT_Macro_long<-pivot_longer(FMWT_Macro,cols="Acanthomysis aspera":"Neomysis mercedis",names_to = "Taxlifestage",values_to = "BPUE")
FMWT_Macro_long$Taxlifestage<-paste(FMWT_Macro_long$Taxlifestage,"Adult")
FMWT_Macro_long<-dplyr::select(FMWT_Macro_long,Date,Station,Taxlifestage,BPUE,Longitude, Latitude)
FMWT_Macro_long$Source<-c("FMWT")
FMWT_Macro_long$SizeClass<-c("Macro")
#rbind in FMWT_Macro_long with Zoop_BPUE
Zoop_BPUE<-Zoop_BPUE%>%rbind(FMWT_Macro_long)
#Zoop_BPUE should now have all the BPUE data we need for both short and long-term metrics
###############################
#Determine SubRegion assignments
###############################
#fit into deltamapr subregions for Brians adjusted EDSM subregions
WaterMap<-readRDS("Data/WaterMap.rds") #load watermap
stratum<-(R_EDSM_Subregions_Mahardja)%>%
st_transform(4326)
#run ez stations seperately because they are non-fixed
ez<-c("NZEZ6","NZEZ2","NZEZ2SJR","NZEZ6SJR")
ez_stations<-unique(dplyr::select(Zoop_BPUE,Source,Station,Longitude,Latitude,Date))%>%filter(Station%in%ez)
ez_stations<-ez_stations[complete.cases(ez_stations$Longitude),]
ez_stations_geom<-st_as_sf(ez_stations,coords = c("Longitude", "Latitude"),remove = TRUE, crs = 4326)
p<-ggplot()+
geom_sf(data=stratum,aes(fill=SubRegion))+
geom_sf(data=spacetools::Delta)+
geom_sf(data = ez_stations_geom$geometry, size = 2,
shape = 23, fill = "green")+
theme(legend.position = "none")
p
ggsave("Figures/ez_station_subregions.png")
ez_subregions<-st_join(ez_stations_geom,stratum,join = st_within) #joing ez stations to subregions
st_geometry(ez_subregions)<-NULL
ez_subregions<-unique((dplyr::select(ez_subregions,Source,Date,Station,SubRegion)))
#regular stations
zoop_stations<-unique(dplyr::select(Zoop_BPUE,Source,Station,Longitude,Latitude))
zoop_stations<-zoop_stations[complete.cases(zoop_stations$Longitude),]
zoop_stations<-(zoop_stations%>%filter(!Station%in%ez))
zoop_stations<-unique(as.matrix(zoop_stations)) #for some reason have to do this to remove duplicates, wasn;t working on just the dataframe?
zoop_stations<-as.data.frame(zoop_stations)
zoop_stations_geom<-st_as_sf(zoop_stations,coords = c("Longitude", "Latitude"),remove = TRUE, crs = 4326)
p<-ggplot()+
geom_sf(data=stratum,aes(fill=SubRegion))+
geom_sf(data=spacetools::Delta)+
geom_sf(data = zoop_stations_geom$geometry, size = 2,
shape = 23, fill = "green")+
theme(legend.position = "none")
p
ggsave("Figures/station_subregions.png")
station_subregions<-st_join(zoop_stations_geom,stratum,join = st_within)
st_geometry(station_subregions)<-NULL
station_subregions<-unique((dplyr::select(station_subregions,Source,Station,SubRegion)))
#join in new subregion station assignments to the Zoop_BPUE dataframe
Zoop_BPUE_regions<-Zoop_BPUE%>%inner_join(station_subregions)
Zoop_BPUE_ez_regions<-Zoop_BPUE%>%inner_join(ez_subregions)
Zoop_BPUE<-Zoop_BPUE_regions%>%rbind(Zoop_BPUE_ez_regions)
Zoop_BPUE$water_year<-wtr_yr(Zoop_BPUE$Date)
#assign month and years
Zoop_BPUE$month<-as.numeric(format(as.Date(Zoop_BPUE$Date), "%m"))
Zoop_BPUE$year<-as.numeric(format(as.Date(Zoop_BPUE$Date), "%Y"))
#################################
#FLOAT Long term analysis (1975-2010,EMP)
#################################
#filter for target metrics
Zoop_LT<-Zoop_BPUE%>%
filter(Source=="EMP",water_year<2011,Taxlifestage%in%target_FLOAT_taxa)
#first calc total BPUE for each sample
Zoop_sample_totals<-Zoop_LT%>%group_by(Station,Date,SubRegion,water_year,month)%>%
dplyr::summarise(totalBPUE=sum(BPUE))
#calculate monthly average totalBPUE
Zoop_BPUE_monthly_average<-Zoop_sample_totals%>%
group_by(water_year,month,SubRegion)%>%
dplyr::summarise(month_BPUE=mean(totalBPUE))
#calculate seasonal averages for each subregion
month<-c(1,2,3,4,5,6,7,8,9,10,11,12)
Season<-c("Winter","Winter","Spring","Spring","Spring,","Summer","Summer","Summer","Fall","Fall","Fall","Winter")
szn_mnth<-data.frame(month,Season)
szn_mnth$Season<-factor(szn_mnth$Season,levels=c("Winter","Spring","Summer","Fall"))
Zoop_BPUE_monthly_average<-Zoop_BPUE_monthly_average%>%inner_join(szn_mnth)
Zoop_BPUE_szn_avg<-Zoop_BPUE_monthly_average%>%group_by(Season,water_year,SubRegion)%>%
dplyr::summarise(szn_BPUE=mean(month_BPUE))
#drop regions not in fall low_sal zone or long-term analysis lists
sams_table<-read.csv("Data/Low_salinity_zone.csv")
sams_table$water_year<-sams_table$Year
Zoop_BPUE_szn_avg<-Zoop_BPUE_szn_avg%>%inner_join(sams_table)#inner join narrows to just low_sal_zone
Zoop_FLOAT_LT<-Zoop_BPUE_szn_avg%>%
filter(Long_term=="TRUE")
#calculate year szn average across subregions
Zoop_FLOAT_LT<-Zoop_FLOAT_LT%>%
group_by(water_year,Season)%>%
dplyr::summarise(szn_BPUE=mean(szn_BPUE))
##############################
#FLOAT Short-term analysis (2010-2020, EMP, FMWT, STN, 20mm)
##############################
Zoop_ST<-Zoop_BPUE%>%
filter(water_year>2009,Taxlifestage%in%target_FLOAT_taxa)
Zoop_ST_totals<-Zoop_ST%>%group_by(Station,Date,SubRegion,water_year,month)%>%
dplyr::summarise(totalBPUE=sum(BPUE))
#calc monthly subregion averages
Zoop_ST_m<-Zoop_ST_totals%>%
group_by(SubRegion,water_year,month)%>%
dplyr::summarise(month_BPUE=mean(totalBPUE))
#calc seasonal averages for each Subregion
Zoop_ST_s<-Zoop_ST_m%>%inner_join(szn_mnth)
Zoop_ST_s<-Zoop_ST_s%>%
group_by(Season,water_year,SubRegion)%>%
dplyr::summarise(season_BPUE=mean(month_BPUE))
#drop regions not in Sams table
Zoop_ST_s<-Zoop_ST_s%>%inner_join(sams_table)%>%
filter(water_year>2009, Short_term==TRUE)
Zoop_FLOAT_ST<-Zoop_ST_s%>%
group_by(water_year,Season)%>%
dplyr::summarise(szn_BPUE=mean(season_BPUE))
#################################
#DROUGHT BPUE Long term analysis (1975-2021,EMP)
#################################
rosies_table<-read.csv("Data/Rosies_regions.csv")
Drought_LT<-Zoop_BPUE%>%
filter(Taxlifestage%in%target_DROUGHT_taxa)
#first calc total BPUE for each sample
Drought_LT_t<-Drought_LT%>%group_by(Station,Date,SubRegion,water_year,month)%>%
dplyr::summarise(totalBPUE=sum(BPUE))
Drought_LT_t<-Drought_LT_t%>%
inner_join(szn_mnth)
Drought_LT_monthly_average<-Drought_LT_t%>%
group_by(water_year,month,SubRegion,Season)%>%
dplyr::summarise(month_BPUE=mean(totalBPUE))
Drought_LT_m<-Drought_LT_monthly_average%>%
inner_join(rosies_table)%>%
filter(Long_term==TRUE)
#calculate seasonal averages
Drought_LT_s<-Drought_LT_m%>%
group_by(water_year,SubRegion,Season)%>%
dplyr::summarise(s_BPUE=mean(month_BPUE))
Zoop_Drought_LT<-Drought_LT_s%>%
group_by(Season,water_year)%>%
dplyr::summarise(szn_BPUE=mean(s_BPUE))
#################################
#DROUGHT CPUE Long term analysis (1975-2010,EMP)
#this is count and not biomass estimates
#################################
Drought_LT_CPUE<-Zoop_data%>%
filter(Taxlifestage%in%target_DROUGHT_taxa)
Drought_LT_CPUE<-Drought_LT_CPUE%>% #join in subregions
inner_join(station_subregions)
Drought_LT_CPUE$month<-as.numeric(format(as.Date(Drought_LT_CPUE$Date), "%m"))
Drought_LT_CPUE$year<-as.numeric(format(as.Date(Drought_LT_CPUE$Date), "%Y"))
Drought_LT_CPUE<-Drought_LT_CPUE%>%inner_join(szn_mnth)
Drought_LT_CPUE$water_year<-wtr_yr(Drought_LT_CPUE$Date)
Drought_LT_CPUE<-Drought_LT_CPUE%>%group_by(Station,Date,SubRegion,water_year,month,Season)%>%
filter(water_year>1974)%>%
dplyr::summarise(totalCPUE=sum(CPUE))
Drought_LT_CPUE<-Drought_LT_CPUE%>%
group_by(water_year,month,SubRegion,Season)%>%
dplyr::summarise(month_CPUE=mean(totalCPUE))
Drought_LT_CPUE<-Drought_LT_CPUE%>%
inner_join(rosies_table)%>%
filter(Long_term==TRUE)
#calculate seasonal averages
Drought_LT_CPUE<-Drought_LT_CPUE%>%
group_by(water_year,SubRegion,Season)%>%
dplyr::summarise(s_CPUE=mean(month_CPUE))
Zoop_Drought_LT_CPUE<-Drought_LT_CPUE%>%
group_by(Season,water_year)%>%
dplyr::summarise(szn_CPUE=mean(s_CPUE))
write.csv(Zoop_FLOAT_LT,"Outputs/zoop_float_lt.csv",row.names = F)
write.csv(Zoop_FLOAT_ST,"Outputs/zoop_float_st.csv",row.names = F)
write.csv(Zoop_Drought_LT,"Outputs/zoop_drought_lt.csv",row.names = F)
write.csv(Zoop_Drought_LT_CPUE,"Outputs/zoop_drought_lt_cpue.csv",row.names = F)
saveRDS(Zoop_FLOAT_LT,"Outputs/zoop_float_lt.rds")
saveRDS(Zoop_FLOAT_ST,"Outputs/zoop_float_st.rds")
saveRDS(Zoop_Drought_LT,"Outputs/zoop_drought_lt.rds")
saveRDS(Zoop_Drought_LT_CPUE,"Outputs/zoop_drought_lt_cpue.rds")
#FLOAT-MAST metric figures
library(tidyr)
library(dplyr)
library(ggplot2)
Zoop_FLOAT_LT<-readRDS("Outputs/zoop_float_lt.rds")
Zoop_FLOAT_ST<-readRDS("Outputs/zoop_float_st.rds")
Zoop_Drought_LT<-readRDS("Outputs/zoop_drought_lt.rds")
Zoop_Drought_LT_CPUE<-readRDS("Outputs/zoop_drought_lt_cpue.rds")
Zoop_FLOAT_LT$Analysis<-"FLOAT_LT_BPUE"
Zoop_FLOAT_ST$Analysis<-"FLOAT_ST_BPUE"
Zoop_Drought_LT$Analysis<-"Drought_LT_BPUE"
Zoop_Drought_LT_CPUE$Analysis<-"Drought_LT_CPUE"
Zoop_FLOAT_LT$metric<-Zoop_FLOAT_LT$szn_BPUE
Zoop_FLOAT_ST$metric<-Zoop_FLOAT_ST$szn_BPUE
Zoop_Drought_LT$metric<-Zoop_Drought_LT$szn_BPUE
Zoop_Drought_LT_CPUE$metric<-Zoop_Drought_LT_CPUE$szn_CPUE
all_metrics<-Zoop_FLOAT_LT%>%
rbind(Zoop_FLOAT_ST)%>%
rbind(Zoop_Drought_LT)%>%
rbind(Zoop_Drought_LT_CPUE)
all_metrics$Season<-factor(all_metrics$Season,levels = c("Winter","Spring","Summer","Fall"))
all_metrics$Year_Season<-paste(all_metrics$water_year,all_metrics$Season,sep=" ")
p<-ggplot(all_metrics,aes(water_year,metric))+
geom_bar(stat="identity")+
theme_classic()+theme(axis.text.x=element_text(angle=90,size=8))+
facet_wrap(Analysis~Season,nrow=4)
p
ggsave("Figures/all_metrics.png")
#dist function
dist_center<-function(data,taxa){
d=data%>%
filter(Taxlifestage==taxa)
d$km_freq<-d$CPUE*d$distance_km
d1<-d%>%
group_by(Survey,seasons,Year,Taxlifestage,Regime)%>%
dplyr::summarize(km_center=sum(km_freq)/sum(CPUE),Mean_X2=mean(X2))
}
#calculate station distances using spacetools
zoop_stations$Station_ID<-paste(zoop_stations$Source,zoop_stations$Station,sep="_")
ez_stations$Station_ID<-paste(ez_stations$Source,ez_stations$Station,sep="_")
ez_stations$Station_ID<-paste(ez_stations$Source,ez_stations$Station,ez_stations$Date,sep="_")
View(Zoop_FLOAT_LT)
Zoop_FLOAT_LT<-dplyr::rename(Zoop_FLOAT_LT,BPUE_ug=szn_BPUE)
##############################
#FLOAT Short-term analysis (2010-2020, EMP, FMWT, STN, 20mm)
##############################
Zoop_ST<-Zoop_BPUE%>%
filter(water_year>2009,Taxlifestage%in%target_FLOAT_taxa)
##############################
#FLOAT Short-term analysis (2010-2020, EMP, FMWT, STN, 20mm)
##############################
Zoop_ST<-Zoop_BPUE%>%
filter(water_year>2009,Taxlifestage%in%target_FLOAT_taxa)
Zoop_ST_totals<-Zoop_ST%>%group_by(Station,Date,SubRegion,water_year,month)%>%
dplyr::summarise(totalBPUE=sum(BPUE))
#calc monthly subregion averages
Zoop_ST_m<-Zoop_ST_totals%>%
group_by(SubRegion,water_year,month)%>%
dplyr::summarise(month_BPUE=mean(totalBPUE))
#calc seasonal averages for each Subregion
Zoop_ST_s<-Zoop_ST_m%>%inner_join(szn_mnth)
Zoop_ST_s<-Zoop_ST_s%>%
group_by(Season,water_year,SubRegion)%>%
dplyr::summarise(season_BPUE=mean(month_BPUE))
#drop regions not in Sams table
Zoop_ST_s<-Zoop_ST_s%>%inner_join(sams_table)%>%
filter(water_year>2009, Short_term==TRUE)
Zoop_FLOAT_ST<-Zoop_ST_s%>%
group_by(water_year,Season)%>%
dplyr::summarise(szn_BPUE=mean(season_BPUE))
Zoop_FLOAT_ST<-dplyr::rename(Zoop_FLOAT_ST,BPUE_ug=szn_BPUE)
#################################
#DROUGHT BPUE Long term analysis (1975-2021,EMP)
#################################
rosies_table<-read.csv("Data/Rosies_regions.csv")
Drought_LT<-Zoop_BPUE%>%
filter(Taxlifestage%in%target_DROUGHT_taxa)
#first calc total BPUE for each sample
Drought_LT_t<-Drought_LT%>%group_by(Station,Date,SubRegion,water_year,month)%>%
dplyr::summarise(totalBPUE=sum(BPUE))
Drought_LT_t<-Drought_LT_t%>%
inner_join(szn_mnth)
Drought_LT_monthly_average<-Drought_LT_t%>%
group_by(water_year,month,SubRegion,Season)%>%
dplyr::summarise(month_BPUE=mean(totalBPUE))
Drought_LT_m<-Drought_LT_monthly_average%>%
inner_join(rosies_table)%>%
filter(Long_term==TRUE)
#calculate seasonal averages
Drought_LT_s<-Drought_LT_m%>%
group_by(water_year,SubRegion,Season)%>%
dplyr::summarise(s_BPUE=mean(month_BPUE))
Zoop_Drought_LT<-Drought_LT_s%>%
group_by(Season,water_year)%>%
dplyr::summarise(szn_BPUE=mean(s_BPUE))
Zoop_Drought_LT<-dplyr::rename(Zoop_Drought_LT,BPUE_ug=szn_BPUE)
#################################
#DROUGHT CPUE Long term analysis (1975-2010,EMP)
#this is count and not biomass estimates
#################################
Drought_LT_CPUE<-Zoop_data%>%
filter(Taxlifestage%in%target_DROUGHT_taxa)
Drought_LT_CPUE<-Drought_LT_CPUE%>% #join in subregions
inner_join(station_subregions)
Drought_LT_CPUE$month<-as.numeric(format(as.Date(Drought_LT_CPUE$Date), "%m"))
Drought_LT_CPUE$year<-as.numeric(format(as.Date(Drought_LT_CPUE$Date), "%Y"))
Drought_LT_CPUE<-Drought_LT_CPUE%>%inner_join(szn_mnth)
Drought_LT_CPUE$water_year<-wtr_yr(Drought_LT_CPUE$Date)
Drought_LT_CPUE<-Drought_LT_CPUE%>%group_by(Station,Date,SubRegion,water_year,month,Season)%>%
filter(water_year>1974)%>%
dplyr::summarise(totalCPUE=sum(CPUE))
Drought_LT_CPUE<-Drought_LT_CPUE%>%
group_by(water_year,month,SubRegion,Season)%>%
dplyr::summarise(month_CPUE=mean(totalCPUE))
Drought_LT_CPUE<-Drought_LT_CPUE%>%
inner_join(rosies_table)%>%
filter(Long_term==TRUE)
#calculate seasonal averages
Drought_LT_CPUE<-Drought_LT_CPUE%>%
group_by(water_year,SubRegion,Season)%>%
dplyr::summarise(s_CPUE=mean(month_CPUE))
Zoop_Drought_LT_CPUE<-Drought_LT_CPUE%>%
group_by(Season,water_year)%>%
dplyr::summarise(szn_CPUE=mean(s_CPUE))
#dist function
dist_center<-function(data,taxa){
d=data%>%
filter(Taxlifestage==taxa)
d$km_freq<-d$CPUE*d$distance_km
d1<-d%>%
group_by(Survey,seasons,Year,Taxlifestage,Regime)%>%
dplyr::summarize(km_center=sum(km_freq)/sum(CPUE),Mean_X2=mean(X2))
}
write.csv(Zoop_FLOAT_LT,"Outputs/zoop_float_lt.csv",row.names = F)
write.csv(Zoop_FLOAT_ST,"Outputs/zoop_float_st.csv",row.names = F)
write.csv(Zoop_Drought_LT,"Outputs/zoop_drought_lt.csv",row.names = F)
write.csv(Zoop_Drought_LT_CPUE,"Outputs/zoop_drought_lt_cpue.csv",row.names = F)
saveRDS(Zoop_FLOAT_LT,"Outputs/zoop_float_lt.rds")
saveRDS(Zoop_FLOAT_ST,"Outputs/zoop_float_st.rds")
saveRDS(Zoop_Drought_LT,"Outputs/zoop_drought_lt.rds")
saveRDS(Zoop_Drought_LT_CPUE,"Outputs/zoop_drought_lt_cpue.rds")
library(tidyr)
library(dplyr)
library(ggplot2)
Zoop_FLOAT_LT<-readRDS("Outputs/zoop_float_lt.rds")
Zoop_FLOAT_ST<-readRDS("Outputs/zoop_float_st.rds")
Zoop_Drought_LT<-readRDS("Outputs/zoop_drought_lt.rds")
Zoop_Drought_LT_CPUE<-readRDS("Outputs/zoop_drought_lt_cpue.rds")
Zoop_FLOAT_LT$Analysis<-"FLOAT_LT_BPUE"
Zoop_FLOAT_ST$Analysis<-"FLOAT_ST_BPUE"
Zoop_Drought_LT$Analysis<-"Drought_LT_BPUE"
Zoop_Drought_LT_CPUE$Analysis<-"Drought_LT_CPUE"
Zoop_FLOAT_LT$metric<-Zoop_FLOAT_LT$szn_BPUE
Zoop_FLOAT_LT$metric<-Zoop_FLOAT_LT$BPUE_ug
Zoop_FLOAT_ST$metric<-Zoop_FLOAT_ST$BPUE_ug
Zoop_Drought_LT$metric<-Zoop_Drought_LT$BPUE_ug
Zoop_Drought_LT_CPUE$metric<-Zoop_Drought_LT_CPUE$szn_CPUE
all_metrics<-Zoop_FLOAT_LT%>%
rbind(Zoop_FLOAT_ST)%>%
rbind(Zoop_Drought_LT)%>%
rbind(Zoop_Drought_LT_CPUE)
all_metrics$Season<-factor(all_metrics$Season,levels = c("Winter","Spring","Summer","Fall"))
all_metrics$Year_Season<-paste(all_metrics$water_year,all_metrics$Season,sep=" ")
p<-ggplot(all_metrics,aes(water_year,metric))+
geom_bar(stat="identity")+
theme_classic()+theme(axis.text.x=element_text(angle=90,size=8))+
facet_wrap(Analysis~Season,nrow=4)
p
ggsave("Figures/all_metrics.png")
#dist function
dist_center<-function(data,taxa){
d=data%>%
filter(Taxlifestage==taxa)
d$km_freq<-d$CPUE*d$distance_km
d1<-d%>%
group_by(Survey,seasons,Year,Taxlifestage,Regime)%>%
dplyr::summarize(km_center=sum(km_freq)/sum(CPUE),Mean_X2=mean(X2))
}
#calculate station distances using spacetools
zoop_stations$Station_ID<-paste(zoop_stations$Source,zoop_stations$Station,sep="_")
ez_stations$Station_ID<-paste(ez_stations$Source,ez_stations$Station,ez_stations$Date,sep="_")
View(zoop_stations)
#add in goldengate lat/long
gg_c<-c("Golden_Gate","Golden_Gate","-122.4783","37.8199")
gg_ez<-c("Golden_Gate","Golden_Gate","-122.4783","37.8199","1/1/1999")
zoop_stations<-zoop_stations%>%rbind(gg_c)
ez_stations<-ez_stations%>%rbind(gg_ez)
station_distances<-Waterdist(Water_map = spacetools::Delta, Points = zoop_stations,
Latitude_column = Latitude, Longitude_column = Longitude,
PointID_column = Station_ID)
p<-ggplot(all_metrics,aes(water_year,metric))+
geom_bar(stat="identity")+
theme_classic()+theme(axis.text.x=element_text(angle=90,size=8))+
facet_wrap(Analysis~Season,nrow=4,axis="free_y")
p
p<-ggplot(all_metrics,aes(water_year,metric))+
geom_bar(stat="identity")+
theme_classic()+theme(axis.text.x=element_text(angle=90,size=8))+
facet_wrap(Analysis~Season,nrow=4,axis="free_y")
p<-ggplot(all_metrics,aes(water_year,metric))+
geom_bar(stat="identity")+
theme_classic()+theme(axis.text.x=element_text(angle=90,size=8))+
facet_wrap(Analysis~Season,nrow=4,scales = ="free_y")
p<-ggplot(all_metrics,aes(water_year,metric))+
geom_bar(stat="identity")+
theme_classic()+theme(axis.text.x=element_text(angle=90,size=8))+
facet_wrap(Analysis~Season,nrow=4,scales ="free_y")
p
ggsave("Figures/all_metrics.png")
View(station_distances)
?rownames_to_column
station_distances_df<-as.data.frame(station_distances)
station_distances_df<-rownames_to_column(station_distances_df,var="Station_ID")
View(station_distances_df)
station_distances_df<-dplyr::select(station_distances_df,Station_ID,Golden_Gate)
View(station_distances)
ez_distances<-Waterdist(Water_map = spacetools::Delta, Points = ez_stations,
Latitude_column = Latitude, Longitude_column = Longitude,
PointID_column = Station)
View(station_distances_df)
ez_distances_df<-as.data.frame(ez_distances)
ez_distances_df<-rownames_to_column(ez_distances_df,var="Station_ID")
View(ez_distances_df)
ez_stations$Station_ID<-paste(ez_stations$Source,ez_stations$Station,ez_stations$Date,sep="_")
View(ez_stations)
#add in goldengate lat/long
gg_c<-c("Golden_Gate","Golden_Gate","-122.4783","37.8199")
gg_ez<-c("Golden_Gate","Golden_Gate","-122.4783","37.8199","1/1/1999")
zoop_stations<-zoop_stations%>%rbind(gg_c)
ez_stations<-ez_stations%>%rbind(gg_ez)
#run ez stations seperately because they are non-fixed
ez<-c("NZEZ6","NZEZ2","NZEZ2SJR","NZEZ6SJR")
ez_stations<-unique(dplyr::select(Zoop_BPUE,Source,Station,Longitude,Latitude,Date))%>%filter(Station%in%ez)
ez_stations<-ez_stations[complete.cases(ez_stations$Longitude),]
ez_stations_geom<-st_as_sf(ez_stations,coords = c("Longitude", "Latitude"),remove = TRUE, crs = 4326)
ez_stations$Station_ID<-paste(ez_stations$Source,ez_stations$Station,ez_stations$Date,sep="_")
#add in goldengate lat/long
gg_c<-c("Golden_Gate","Golden_Gate","-122.4783","37.8199")
gg_ez<-c("Golden_Gate","Golden_Gate","-122.4783","37.8199","1/1/1999")
zoop_stations<-zoop_stations%>%rbind(gg_c)
ez_stations<-ez_stations%>%rbind(gg_ez)
ez_distances<-Waterdist(Water_map = spacetools::Delta, Points = ez_stations,
Latitude_column = Latitude, Longitude_column = Longitude,
PointID_column = Station)
ez_distances<-Waterdist(Water_map = spacetools::Delta, Points = ez_stations,
Latitude_column = Latitude, Longitude_column = Longitude,
PointID_column = Station_ID)
ez_distances_df<-as.data.frame(ez_distances)
ez_distances_df<-rownames_to_column(ez_distances_df,var="Station_ID")
ez_distances_df<-dplyr::select(ez_distances_df,Station_ID,Golden_Gate)
View(station_distances_df)
library(stingr)
install.packages(stringr)
install.packages("stringr")
library(stringr)
#seperate our Station ID info
stations_distances_df$Source<-str_split(stations_distances_df$Station_ID,"_")
station_distances_df<-as.data.frame(station_distances)
station_distances_df<-rownames_to_column(station_distances_df,var="Station_ID")
station_distances_df<-dplyr::select(station_distances_df,Station_ID,Golden_Gate)
ez_distances_df<-as.data.frame(ez_distances)
ez_distances_df<-rownames_to_column(ez_distances_df,var="Station_ID")
ez_distances_df<-dplyr::select(ez_distances_df,Station_ID,Golden_Gate)
#seperate our Station ID info
stations_distances_df$Source<-str_split(stations_distances_df$Station_ID,"_")
#seperate our Station ID info
station_distances_df$Source<-str_split(station_distances_df$Station_ID,"_")
station_distances_df<-as.data.frame(station_distances)
station_distances_df<-rownames_to_column(station_distances_df,var="Station_ID")
station_distances_df<-dplyr::select(station_distances_df,Station_ID,Golden_Gate)
ez_distances_df<-as.data.frame(ez_distances)
ez_distances_df<-rownames_to_column(ez_distances_df,var="Station_ID")
ez_distances_df<-dplyr::select(ez_distances_df,Station_ID,Golden_Gate)
#seperate our Station ID info
station_distances_df$Source<-str_split_n(station_distances_df$Station_ID,"_",1)
#seperate our Station ID info
station_distances_df$Source<-str_split_n(station_distances_df$Station_ID,"_",1)
#seperate our Station ID info
station_distances_df$Source<-str_split_fixed(station_distances_df$Station_ID,"_",1)
#seperate our Station ID info
station_distances_df$Source<-str_split(station_distances_df$Station_ID,"_",1)
#seperate our Station ID info
station_distances_df$Source<-str_split(station_distances_df$Station_ID,"_",n=1)
?str_split
station_distances_df$Source<-str_split(station_distances_df$Station_ID,"_")
#seperate our Station ID info
station_distances_df$Source<-str_split(station_distances_df$Station_ID,"_",n=1)
#seperate our Station ID info
station_distances_df$Source<-seperate(station_distances_df$Station_ID,c("Source","Station"))
#seperate our Station ID info
station_distances_df$Source<-tidyr::seperate(station_distances_df$Station_ID,c("Source","Station"))
#seperate our Station ID info
station_distances_df$Source<-tidy::seperate(station_distances_df$Station_ID,c("Source","Station"))
#seperate our Station ID info
station_distances_df$Source<-tidy::separate(station_distances_df$Station_ID,c("Source","Station"))
#seperate our Station ID info
station_distances_df$Source<-separate(station_distances_df$Station_ID,c("Source","Station"))
str(station_distances_df)
#seperate our Station ID info
station_distances_df$Station_ID<-as.character(station_distances_df$Station_ID)
station_distances_df$Source<-separate(station_distances_df$Station_ID,c("Source","Station"))
station_distances_df$Source<-separate(station_distances_df$Station_ID,c("Source","Station"),sep="_")
station_distances_df$Source<-separate(station_distances_df$Station_ID,c("Source","Station"),sep="_")
